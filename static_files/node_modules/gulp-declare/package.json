{
  "name": "gulp-declare",
  "version": "0.2.0",
  "description": "Safely declare namespaces and set their properties",
  "main": "index.js",
  "dependencies": {
    "vinyl-map": "~0.1.0",
    "xtend": "~2.1.2",
    "nsdeclare": "~0.0.0"
  },
  "devDependencies": {
    "gulp-util": "~2.2.14",
    "should": "~3.1.2",
    "mocha": "~1.17.1"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/lazd/gulp-declare.git"
  },
  "keywords": [
    "gulpplugin",
    "declare"
  ],
  "author": {
    "name": "Larry Davis",
    "email": "lazdnet@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/lazd/gulp-declare/issues"
  },
  "engines": {
    "node": ">=0.9"
  },
  "readme": "# gulp-declare [![NPM version][npm-image]][npm-url] [![Build status][travis-image]][travis-url]\n> declare plugin for gulp 3\n\n## Usage\n\nFirst, install `gulp-declare` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-declare\n```\n\nThen, add it to your `gulpfile.js`:\n\n```javascript\nvar handlebars = require('gulp-handlebars');\nvar declare = require('gulp-declare');\n\ngulp.task('templates', function(){\n  gulp.src(['client/templates/*.hbs'])\n    .pipe(handlebars()) // returns a bare function\n    .pipe(declare({\n      namespace: 'MyApp.templates'\n    }))\n    .pipe(concat('templates.js'))\n    .pipe(gulp.dest('build/js/'));\n});\n```\n\n## API\n\n### declare(options)\n\n#### options.namespace\nType: `String`  \nDefault: `\"this\"`\n\nThe namespace in which the file contents will be assigned. Use dot notation (e.g. `MyApp.Templates`) for nested namespaces.\n\nFor example, if the namespace is `MyApp.Templates` and a file is named `App.Header.js`, the following declaration will be added:\n\n```javascript\nthis[\"MyApp\"] = this[\"MyApp\"] || {};\nthis[\"MyApp\"][\"templates\"] = this[\"MyApp\"][\"templates\"] || {};\nthis[\"MyApp\"][\"templates\"][\"App\"] = this[\"MyApp\"][\"templates\"][\"App\"] || {};\nthis[\"MyApp\"][\"templates\"][\"App\"][\"Header\"] = /* File contents from App.Header.js */;\n```\n\nIf the default value of `\"this\"` is provided, namespace declaration will be determined soley by the filename and output of `options.processName`. That is, a file names `MyApp.templates.App.Header.js` will result in the same declaration as above.\n\n\n#### options.processName\nType: `Function`  \nDefault: Strip file extension\n\nThis option accepts a function which takes one argument (the filepath) and returns a string which will be used as the key for object. By default, the filename minus the extension is used.\n\nIf this function returns a string containing periods (not including the file extension), they will be represented as a sub-namespace. See `options.namespace` for an example of the effect.\n\n\n#### options.separator\nType: `String`  \nDefault: `\\n`\n\nThe separator to use between declarations.\n\n\n#### options.root\nType: `String`  \nDefault: `this`\n\nThe root object to declare the namespace within. Defaults to `this` (which is equal to `window` in the browser).\n\n\n#### options.noRedeclare\nType: `Boolean`  \nDefault: `false`\n\nIf `true`, parts of the namespace that were declared as a result of previous files in the stream will not be redeclared. For instance, if the stream contains the following files:\n\n* Main.Content.js\n* Main.Header.js\n* Main.Footer.js\n\nAnd if `declare` is invoked with `namespace: 'MyApp'` and `noRedeclare: true`, the contents of the streamed files will look like this:\n\n**Main.Content.js**\n```javascript\nthis[\"MyApp\"] = this[\"MyApp\"] || {};\nthis[\"MyApp\"][\"Main\"] = this[\"MyApp\"][\"Main\"] || {};\nthis[\"MyApp\"][\"Main\"][\"Content\"] = /* File contents from Main.Content.js */;\n```\n\n**Main.Header.js**\n```javascript\nthis[\"MyApp\"][\"Main\"][\"Header\"] = /* File contents from Main.Header.js */;\n```\n\n**Main.Footer.js**\n```javascript \nthis[\"MyApp\"][\"Main\"][\"Footer\"] = /* File contents from Main.Footer.js */;\n```\n\n\n\n[travis-url]: http://travis-ci.org/lazd/gulp-declare\n[travis-image]: https://secure.travis-ci.org/lazd/gulp-declare.png?branch=master\n[npm-url]: https://npmjs.org/package/gulp-declare\n[npm-image]: https://badge.fury.io/js/gulp-declare.png\n",
  "readmeFilename": "README.md",
  "_id": "gulp-declare@0.2.0",
  "dist": {
    "shasum": "4ef60ce4afa5f8c9090cff9122a37635a05c80a7"
  },
  "_from": "gulp-declare@",
  "_resolved": "https://registry.npmjs.org/gulp-declare/-/gulp-declare-0.2.0.tgz"
}
